plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'idea'
}

group = 'com.logicalsapien.covan'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.2")
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration-test/java')
		}
		resources.srcDir file('src/integration-test/resources')
	}
}

idea {
	module {
		testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
		testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
	group = 'verification'
	description = 'Runs integration tests.'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
	mustRunAfter test

	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
}

check {
	dependsOn integrationTest
}

jar {
	manifest {
		attributes 'Main-Class': 'com.logicalsapien.covan.producer.CovanProducerApplication'
	}
}
